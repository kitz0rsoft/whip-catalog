hooks:
  create_scale:
    remediate: fonts_setup
    check: fonts
    description: |-
      Create fonts.scale file, used by the old server-side fonts subsystem.
    actions:
      - |-
        EROOT=${EROOT:-/}

        if [ -z "${FONT_DIR}" ] ; then
          echo "Missing FONT_DIR variable."
          exit 1
        fi

        create_fonts_scale() {
          if [[ ${FONT_DIR} != Speedo && ${FONT_DIR} != CID ]]; then
            echo "Generating fonts.scale for ${FONT_DIR}"
            mkfontscale \
              -a "${EROOT}/usr/share/fonts/encodings/encodings.dir" \
              -- "${EROOT}/usr/share/fonts/${FONT_DIR}"
          fi
        }

        create_fonts_scale

  create_fonts_dir:
    remediate: fonts_dir
    check: fonts
    description: |
      Create fonts.dir file, used by the old server-side fonts subsystem.
    actions:
      - |
        EROOT=${EROOT:-/}

        if [ -z "${FONT_DIR}" ] ; then
          echo "Missing FONT_DIR variable."
          exit 1
        fi

        create_fonts_dir() {
          echo "Generating fonts.dir for ${FONT_DIR}"
          mkfontdir \
            -e "${EROOT}"/usr/share/fonts/encodings \
            -e "${EROOT}"/usr/share/fonts/encodings/large \
            -- "${EROOT}/usr/share/fonts/${FONT_DIR}"
        }

        create_fonts_dir


  convert_pfb:
    remediate: setup_fonts
    check: fonts
    description: |
      Setup and convert the .pfb font files in otf.
      The old .pfb is no more supported in some applications.
      It's better convert it in otf format.

      See https://askubuntu.com/questions/1073122/is-it-possible-to-convert-postcript-font-to-otf-ttf.

      After this hook you need to execute again `setup_al_fonts`

    actions:
      - |
        EROOT=${EROOT:-/}
        FF_OPTS=${FF_OPTS:--lang=ff}

        if [ -n "${DEBUG}" ] ; then set -x ; fi

        function ffconvert {
           fontforge ${FF_OPTS} -c 'Open($1); Generate($2)' "$1" "$2"
        }

        for i in $(find ${EROOT}usr/share/fonts -name \*.pfb) ; do
        echo $i...
        ffconvert $i "${i%.pfb}.otf" ;
        done


  setup_all_fonts:
    remediate: setup_fonts
    check: fonts
    description: |
      Setup fonts.
    actions:
      - |
        EROOT=${EROOT:-/}

        source /lib/gentoo/functions.sh

        setup_all_fonts() {
          local i=""

          for i in $(ls ${EROOT}/usr/share/fonts/) ; do
            if [ $i != "encoding" ] ; then
              export FONT_DIR=$i
              whip hook fonts.create_scale || {
                ewarn "Error on create fonts scale for font ${FONT_DIR}"
              }
              whip hook fonts.create_fonts_dir || {
                ewarn "Error on create fonts.dir file for font ${FONT_DIR}"
              }
            fi
          done
        }

        _update_fontcache() {
            # unreadable font files = fontconfig segfaults
            find "${EROOT%/}"/usr/share/fonts/ -type f '!' -perm 0644 \
                -exec chmod -v 0644 2>/dev/null {} + || die "failed to fix font files perms"
            if [[ -z ${ROOT%/} ]] ; then
                # TODO: check if fontconfig is present and is present fc-cache
                ebegin "Updating global fontcache"
                fc-cache -fs
                if ! eend $? ; then
                    die "failed to update global fontcache"
                fi
            else
                einfo "Skipping fontcache update (ROOT != /)"
            fi
        }

        setup_all_fonts
        _update_fontcache

entrypoint:
  - /bin/bash
  - -c
